#!/usr/bin/env zsh
# shellcheck disable=all

emulate -L zsh

if (( ! ${+ZSH_PLUGIN_DIR} )); then
	typeset -g ZSH_PLUGIN_DIR="${XDG_DATA_HOME:-$HOME/.local/share}/zsh/plugins"
fi

if (( ! ${+ZSH_PLUGINS} )); then
	typeset -gaU ZSH_PLUGINS=()
fi

mkdir -p "${ZSH_PLUGIN_DIR}"

_try_source() {
	local -a initfiles=(
		$plugin_dir/${plugin_name}.{plugin.,}{z,}sh{-theme,}(N)
		$plugin_dir/*.{plugin.,}{z,}sh{-theme,}(N)
	)
	(( $#initfiles )) && source $initfiles[1]
}

# If the absolute is a directory then source as a local plugin
local plugin_absolute="${1:A}"

if [ -d "${plugin_absolute}" ]; then
	local plugin="${plugin_absolute}"
	local plugin_name="${plugin:t}"
	local plugin_dir="${plugin_absolute}"
else
	# If the basename directory exists, then local source only
	if [ -d "${plugin_absolute:h}" ]; then
		[[ -f "${plugin_absolute}" ]] && source "${plugin_absolute}"
		return
	fi

	local plugin="$1"
	local plugin_name="${plugin:t}"
	local plugin_dir="$ZSH_PLUGIN_DIR/$plugin_name"
fi

local git_ref="$2"

if [ ! -d "$plugin_dir" ]; then
	tput civis; printf '  %-35s' "$plugin_name"
	if ! git clone --depth 1 "${GIT_PREFIX:-"https://github.com/"}${plugin}.git" "$plugin_dir" >/dev/null 2>&1; then
		printf '\e[1;31mFailed to clone\e[0m\n'
		return 12
	fi
	printf '\e[1;32mCloned\e[0m\n'
fi

[[ -n "$git_ref" ]] && {
	git -C "$plugin_dir" pull --unshallow > /dev/null 2>&1
	git -C "$plugin_dir" checkout "$git_ref" > /dev/null 2>&1 || { echo "❌ Failed to checkout $git_ref"; return 13 }
}

_try_source && { ZSH_PLUGINS+="$plugin_name" && return 0 } || echo "❌ $plugin_name not activated" && return 1